def stream_pipeline(source, k):
    def updateFunc(new_values, running_value):
        update_value = 0
        if not running_value:
            running_value = 0
        update_value = sum([x for x in new_values]) + running_value
        return update_value
    target = (
        source.flatMap(lambda line: line.split(" "))
        .map(lambda word: (word, 1))
        .reduceByKey(lambda x, y: (x + y))
        .updateStateByKey(updateFunc)
        .transform(lambda rdd: rdd.sortBy(lambda x: x[1], ascending=False))
        .pprint(k)
    )
    return target
