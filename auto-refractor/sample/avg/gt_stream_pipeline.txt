def stream_pipeline(source):
    def updateFunc(new_values, running_value):
        update_value = [0, 0]
        if not running_value:
            running_value = [0, 0]
        update_value[0] = sum([x[0] for x in new_values]) + running_value[0]
        update_value[1] = sum([x[1] for x in new_values]) + running_value[1]
        return update_value
    target = (
        source.map(lambda x: (x.split(",")[2], float(x.split(",")[3])))
        .mapValues(lambda x: (x, 1))
        .reduceByKey(lambda a, b: (a[0] + b[0], a[1] + b[1]))
        .updateStateByKey(updateFunc)
        .mapValues(lambda x: (x[0] / x[1], x[1]))
    )
    return target

